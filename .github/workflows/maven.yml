# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "prod", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Create Maven settings.xml
      run: |
        mkdir -p /home/runner/.m2
        echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>jitpack.io</id>
              <username>${{ secrets.JITPACK_AUTH_TOKEN }}</username>
              <password>.</password>
            </server>
          </servers>
        </settings>' > /home/runner/.m2/settings.xml
        cat /home/runner/.m2/settings.xml

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: "${{ github.event.repository.name }}"
        path: "target/${{ github.event.repository.name }}.jar"

    - name: Discord Webhook Action
      uses: tsickert/discord-webhook@v5.3.0
      with:
        webhook-url: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
        embed-title: "${{ github.event.repository.name }} has been updated"
        embed-description: |
          The latest commit has been built and will be uploaded to the `${{ github.ref_name }}` server.
          You will be notified when the server has been updated.
          Commit message: `${{ github.event.head_commit.message }}`
        embed-color: 0xAB42FF
    - name: Determine webhook url
      run: |
        if [ "${{ github.ref_name }}" = "prod" ]; then
          echo "WEBHOOK_URL=${{ secrets.PROD_WEBHOOK_URL }}" >> $GITHUB_ENV
        else
          echo "WEBHOOK_URL={{ secrets.DEV_WEBHOOK_URL }}" >> $GITHUB_ENV
        fi
    - name: Invoke deployment hook
      uses: distributhor/workflow-webhook@v3
      with:
        webhook_type: 'json-extended'
        webhook_url: "${{ env.WEBHOOK_URL }}/webhook"
        webhook_auth_type: 'header'
        webhook_auth: 'Token:${{ secrets.WEBHOOK_AUTH_TOKEN }}'
        data: '{"artifact_id": "${{ steps.artifact-upload-step.outputs.artifact-id }}"}'
#